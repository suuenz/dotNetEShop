trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  acrLoginServer: 'eshopweb2025.azurecr.io'
  acrServiceConnection: 'eshopweb2025-1124'         # ← Docker Registry
  azureSubscription: 'Azure subscription 1 (2edd3441-9535-4384-9f66-2e3fad269e4c)'               # ← Azure Resource Manager
  azureSubscriptionEndpoint: 'Azure subscription 1 (2edd3441-9535-4384-9f66-2e3fad269e4c)'       # ← برای DockerCompose
  webAppName: 'eshopweb2025-app'
  imageRepository: 'eshoppublicapi'
  tag: '$(Build.BuildId)'

steps:

# 🔐 لاگین به ACR
- task: Docker@2
  displayName: 'Login to ACR'
  inputs:
    command: login
    containerRegistry: '$(acrServiceConnection)'

# 🔧 Build با docker-compose
- task: DockerCompose@0
  displayName: 'Docker Compose - Build'
  inputs:
    projectName: 'dotneteshop'
    containerregistrytype: 'Azure Container Registry'
    azureSubscriptionEndpoint: '$(azureSubscriptionEndpoint)'
    dockerComposeFile: '**/docker-compose.yml'
    additionalDockerComposeFiles: '**/docker-compose.override.yml'
    action: 'Build services'
    buildArguments: |
      DOCKER_REGISTRY=$(acrLoginServer)/
    includeLatestTag: true
    includeProjectNameInTags: false

# 📦 Push به ACR
- task: DockerCompose@0
  displayName: 'Docker Compose - Push'
  inputs:
    projectName: 'dotneteshop'
    containerregistrytype: 'Azure Container Registry'
    azureSubscriptionEndpoint: '$(azureSubscriptionEndpoint)'
    dockerComposeFile: '**/docker-compose.yml'
    additionalDockerComposeFiles: '**/docker-compose.override.yml'
    action: 'Push services'
    buildArguments: |
      DOCKER_REGISTRY=$(acrLoginServer)/

# 🧾 ذخیره نام ایمیج publicapi برای deploy
- script: |
    echo "$(acrLoginServer)/$(imageRepository):latest" > image_name.txt
  displayName: 'Write image name'
- publish: image_name.txt
  artifact: img

# 🚀 Deploy به Web App
- download: current
  artifact: img

- task: Bash@3
  name: readimg
  inputs:
    targetType: 'inline'
    script: |
      IMAGE=$(cat $(Pipeline.Workspace)/img/image_name.txt)
      echo "##vso[task.setvariable variable=FULL_IMAGE]$IMAGE"

- task: AzureWebAppContainer@1
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: '$(azureSubscription)'
    appName: '$(webAppName)'
    containers: '$(FULL_IMAGE)'