trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  acrLoginServer: 'eshopweb2025.azurecr.io'         # آدرس ACR شما
  acrServiceConnection: 'eshopweb2025'        # اتصال ACR در DevOps
  azureSubscription: 'arm-eshop'                # اتصال ARM برای دیپلوی
  webAppName: 'eshopweb2025-app'                # اسم Web App
  imageRepository: 'eshoppublicapi'             # فقط اسم سرویس PublicApi در Compose
  tag: '$(Build.BuildId)'

steps:

# لاگین به ACR
- task: Docker@2
  displayName: 'Login to ACR'
  inputs:
    command: login
    containerRegistry: '$(acrServiceConnection)'

# Build همه سرویس‌ها با Compose
- task: DockerCompose@0
  displayName: 'Docker Compose - Build'
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscriptionEndpoint: '$(acrServiceConnection)'
    dockerComposeFile: '**/docker-compose.yml'
    additionalDockerComposeFiles: '**/docker-compose.override.yml'
    action: 'Build services'
    buildArguments: |
      DOCKER_REGISTRY=$(acrLoginServer)/
    includeLatestTag: true
    includeProjectNameInTags: false
    projectName: 'eshop'   # اختیاری: اسم prefix برای image name

# Push همه ایمیج‌ها به ACR
- task: DockerCompose@0
  displayName: 'Docker Compose - Push'
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscriptionEndpoint: '$(acrServiceConnection)'
    dockerComposeFile: '**/docker-compose.yml'
    additionalDockerComposeFiles: '**/docker-compose.override.yml'
    action: 'Push services'
    buildArguments: |
      DOCKER_REGISTRY=$(acrLoginServer)/

# خروجی فقط image مربوط به PublicApi برای deploy
- script: |
    echo "$(acrLoginServer)/$(imageRepository):latest" > image_name.txt
  displayName: 'Write image name'
- publish: image_name.txt
  artifact: img

# Deploy فقط PublicApi به Azure Web App (Container)
- download: current
  artifact: img

- task: Bash@3
  name: readimg
  inputs:
    targetType: 'inline'
    script: |
      IMAGE=$(cat $(Pipeline.Workspace)/img/image_name.txt)
      echo "##vso[task.setvariable variable=FULL_IMAGE]$IMAGE"

- task: AzureWebAppContainer@1
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: '$(azureSubscription)'
    appName: '$(webAppName)'
    containers: '$(FULL_IMAGE)'